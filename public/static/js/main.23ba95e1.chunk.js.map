{"version":3,"sources":["actions/exampleActions.js","actions/exampleSagaAction.js","actions/eventbrite/eventbriteActions.js","reducers/eventbrite/eventbriteReducer.js","actions/meetup/meetupActions.js","components/events/EventCard.jsx","components/events/EventsList.jsx","components/Home.jsx","components/auth/Login.jsx","components/events/Meetup.jsx","components/events/EventDetail.jsx","Routes.js","App.js","serviceWorker.js","reducers/exampleReducer.js","reducers/exampleReducerSaga.js","reducers/meetup/meetupReducer.js","reducers/index.js","middleware/events.js","saga/index.js","store/index.js","middleware/index.js","index.js"],"names":["fetchData","payload","type","GET_DATA_SAGA","fetchDataSaga","getDataSaga","GET_EVENTBRITE_SAGA","GET_EVENTBRITE_EVENTS_SAGA","fetchEventbriteSaga","getEventbriteSaga","fetchEventbriteEventsSaga","getEventbriteEventsSaga","eventbriteDataSaga","state","arguments","length","undefined","events","action","categories","Object","objectSpread","console","log","value","GET_MEETUP_SAGA","GET_MEETUP_EVENTS_SAGA","fetchMeetupSaga","getMeetupSaga","fetchMeetupEventsSaga","Meta","Card","EventCard","props","react_default","a","createElement","style","background","padding","row","gutter","map","e","date","Date","start","utc","toString","col","key","id","span","card","hoverable","width","marginTop","cover","alt","name","src","logo","url","title","text","description","href","es_button","block","renderEvents","EventsList","this","_this","auto_complete","dataSource","placeholder","filterOption","inputValue","option","children","toUpperCase","indexOf","onBlur","shape","icon","events_EventCard","empty","margin","Component","connect","dispatch","bindActionCreators","Home","triggerAction","events_EventsList","exampleData","Login","user","handleChange","target","setState","login","preventDefault","method","onSubmit","TextField_default","label","onChange","Button_default","variant","Meetup","meetupData","EventDetail","match","params","onClick","history","push","createBrowserHistory","Routes","Switch","Route","exact","path","component","Footer","Layout","Header","Content","Sider","App","className","layout","src_Routes","Boolean","window","location","hostname","exampleDataSaga","dataSaga","meetupDataSaga","combineReducers","getMeetup","fetch","then","response","json","data","getEventbrite","axios","get","headers","Authorization","r","catch","getEventbriteperCategory","query","replace","concat","getMeetupperCategory","signupSaga","getMeetupData","getEventbriteData","getEventbritePerCategory","getMeetupPerCategory","loadSignup","loadMeetup","loadEventbrite","loadEventbriteEvents","loadMeetupEvents","rootSaga","regenerator_default","wrap","_context2","prev","next","put","t0","stop","_marked2","_context3","call","sent","_marked3","_ref","_context4","_marked4","_ref2","_context5","_marked5","_ref3","_context6","_marked6","_context7","takeEvery","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","all","_marked12","sagaMiddleware","createSagaMiddleware","middleware","logger","toConsumableArray","composedEnhancers","compose","apply","applyMiddleware","index","createStore","run","ReactDOM","render","BrowserRouter","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23ba95e1.chunk.js","sourcesContent":["//Action types\nexport const FETCH_DATA = 'FETCH_DATA'\n\n//Action Creators\nexport const fetchData = (payload) => ({\n    type : FETCH_DATA,\n    payload\n})","//Action types\nexport const FETCH_DATA_SAGA = 'FETCH_DATA_SAGA'\nexport const GET_DATA_SAGA = 'GET_DATA_SAGA'\n\n//Action Creators\nexport const fetchDataSaga = (payload) => ({\n    type : FETCH_DATA_SAGA,\n    payload\n})\n\nexport const getDataSaga = (payload) => ({\n    type : GET_DATA_SAGA,\n    payload\n})","//Action types\nexport const FETCH_EVENTBRITE_SAGA = 'FETCH_EVENTBRITE_SAGA'\nexport const GET_EVENTBRITE_SAGA = 'GET_EVENTBRITE_SAGA'\nexport const FETCH_EVENTBRITE_EVENTS_SAGA = 'FETCH_EVENTBRITE_EVENTS_SAGA'\nexport const GET_EVENTBRITE_EVENTS_SAGA = 'GET_EVENTBRITE_EVENTS_SAGA'\nexport const GET_KEYWORD = 'GET_KEYWORD'\n\n//Action Creators\nexport const fetchEventbriteSaga = (payload) => ({\n    type : FETCH_EVENTBRITE_SAGA,\n    payload\n})\n\nexport const getEventbriteSaga = (payload) => ({\n    type : GET_EVENTBRITE_SAGA,\n    payload\n})\n\nexport const fetchEventbriteEventsSaga = (payload) => ({\n    type : FETCH_EVENTBRITE_EVENTS_SAGA,\n    payload\n})\n\nexport const getEventbriteEventsSaga = (payload) => ({\n    type : GET_EVENTBRITE_EVENTS_SAGA,\n    payload\n})\n\nexport const getKeyword = (payload) => ({\n    type : GET_KEYWORD,\n    payload\n})","import {\n    FETCH_EVENTBRITE_EVENTS_SAGA,\n    FETCH_EVENTBRITE_SAGA, GET_KEYWORD\n} from \"../../actions/eventbrite/eventbriteActions\";\n\nconst eventbriteDataSaga = (state = {\n    events:[],\n}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_EVENTBRITE_SAGA:\n            const  { categories } = action.payload\n            //console.log('reducer saga',action.payload)\n            return { ...state,categories}\n        case FETCH_EVENTBRITE_EVENTS_SAGA:\n            const {events} = action.payload\n            return {...state,events}\n        case GET_KEYWORD:\n            console.log('Action keyword:',action.payload)\n            const {value} = action.payload\n            return {...state,value}\n        default:\n            return state\n    }\n}\n\nexport default eventbriteDataSaga;","//Action types\nimport {FETCH_EVENTBRITE_EVENTS_SAGA, GET_EVENTBRITE_EVENTS_SAGA} from \"../eventbrite/eventbriteActions\";\n\nexport const FETCH_MEETUP_SAGA = 'FETCH_MEETUP_SAGA'\nexport const GET_MEETUP_SAGA = 'GET_MEETUP_SAGA'\nexport const FETCH_MEETUP_EVENTS_SAGA = 'FETCH_MEETUP_EVENTS_SAGA'\nexport const GET_MEETUP_EVENTS_SAGA = 'GET_MEETUP_EVENTS_SAGA'\n\n//Action Creators\nexport const fetchMeetupSaga = (payload) => ({\n    type : FETCH_MEETUP_SAGA,\n    payload\n})\n\nexport const getMeetupSaga = (payload) => ({\n    type : GET_MEETUP_SAGA,\n    payload\n})\n\nexport const fetchMeetupEventsSaga = (payload) => ({\n    type : FETCH_MEETUP_EVENTS_SAGA,\n    payload\n})\n\nexport const getMeetupEventsSaga = (payload) => ({\n    type : GET_MEETUP_EVENTS_SAGA,\n    payload\n})","import { Card, Col, Row, Button} from 'antd';\nimport React from 'react'\n\nconst { Meta } = Card;\n\nconst EventCard = (props) => {\n    const renderEvents = () => {\n        const {events} = props\n        return  events ? events.map((e) => {\n                var date = new Date(e.start.utc)\n                date.toString()\n                console.log('this info:',date)\n                 return <Col key={e.id} span={8}>\n                    <Card\n\n                        hoverable\n                        style={{width: 240, marginTop: '1rem'}}\n                        cover={<img alt={e.name}\n                                    src={e.logo ? e.logo.url : 'https://www.valuewalk.com/wp-content/uploads/2017/04/no-thumbnail.png'}/>}\n                    >\n                        <Meta\n                            title={e.name.text}\n                            description={date.toString()}\n                        />\n                        <a href={e.url}>\n                            <Button type=\"primary\" block>More information</Button>\n                        </a>\n                    </Card>\n                </Col>\n            }\n        ) : <h1>No info</h1>\n\n    }\n    return(\n        <div style={{ background: '#ECECEC', padding: '30px' }}>\n            <Row gutter={16}>\n                {renderEvents()}\n            </Row>\n        </div>\n    )\n}\n\nexport default EventCard","import React,{Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {getEventbriteEventsSaga, getEventbriteSaga} from \"../../actions/eventbrite/eventbriteActions\";\nimport {connect} from \"react-redux\";\nimport CategoryList from './CategoryList'\nimport eventbriteDataSaga from \"../../reducers/eventbrite/eventbriteReducer\";\nimport {getMeetupEventsSaga, getMeetupSaga} from \"../../actions/meetup/meetupActions\";\nimport {AutoComplete, Button, Empty} from \"antd\";\nimport EventCard from \"./EventCard\";\n\n\nclass EventsList extends Component{\n    componentWillMount() {\n        this.props.getEventbriteSaga()\n    }\n\n\n    render() {\n        console.log(this.props)\n        //const {categoriesData} = this.props.eventbriteDataSaga ? this.props.eventbriteDataSaga : 'Noinfo'\n        const categories = this.props.eventbriteDataSaga.categories ? this.props.eventbriteDataSaga.categories.map((e) => e.name) : []\n        return(\n            <div>\n                <AutoComplete\n                    style={{ width: 200 }}\n                    dataSource={categories}\n                    placeholder=\"type a keyword\"\n                    filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n                    onBlur={(e)=> {\n                        this.props.getEventbriteEventsSaga(e)\n                    }}\n                />\n                <Button shape=\"circle\" icon=\"search\" />\n                {this.props.eventbriteDataSaga.events.length>0 ? <EventCard events={this.props.eventbriteDataSaga.events}/> : <Empty style={{margin:'1rem'}} description={\n                    <span>\n        not events yet <a href=\"https://www.eventbrite.com/signin/?referrer=%2Fcreate\">Go create one</a>\n      </span>\n                }/>}\n            </div>\n        )\n    }\n}\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        eventbriteDataSaga\n    } = state;\n\n    return {\n        eventbriteDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getEventbriteSaga,\n        getEventbriteEventsSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsList);\n\n\n","import React,{Component} from 'react'\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {fetchData} from '../actions/exampleActions';\nimport {getDataSaga} from '../actions/exampleSagaAction';\nimport EventsList from \"./events/EventsList\";\n\nclass Home extends Component{\n    componentDidMount() {\n        this.props.fetchData();\n    }\n    triggerAction = () =>{\n        console.log(this.props)\n    }\n    render(){\n        return(\n            <div>\n                <EventsList />\n            </div>\n        )\n    }\n\n}\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        exampleData\n    } = state;\n\n    return {\n        exampleData\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        fetchData,\n        getDataSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React,{Component} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nclass Login extends Component{\n    state={\n        user:{}\n    }\n\n    handleChange = (e)=>{\n        const {user} = this.state\n        const field = e.target.name\n        user[field] = e.target.value\n        this.setState({user})\n    }\n    login = (e)=>{\n        e.preventDefault()\n        console.log(this.state)\n    }\n    render() {\n        return(\n            <div>\n                <form method=\"POST\" onSubmit={this.login}>\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Email\"\n                        name=\"email\"\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"contained\" type=\"Submit\"  >\n                        GO\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default Login","import React,{Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {getMeetupSaga} from \"../../actions/meetup/meetupActions\";\nimport {connect} from \"react-redux\";\nimport axios from 'axios'\n\nclass Meetup extends Component{\n    componentWillMount() {\n        //this.props.getMeetupSaga()\n        const token = 'OYNITYQ6UQJDJMWBLDNT'\n        //this thing actually works\n        /*axios.get('https://www.eventbriteapi.com/v3/categories/',\n            {\n                headers: {\n                    Authorization: \"Bearer \" + token,\n\n                }\n            })\n            .then(response=>console.log('respuesta',response))\n            .catch(e=>console.log(e))*/\n\n    }\n\n    render() {\n        console.log(this.props)\n        return(\n            <div>\n                <h1>MeetUp data</h1>\n\n            </div>\n        )\n    }\n\n}\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        meetupData\n    } = state;\n\n    return {\n        meetupData\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getMeetupSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meetup);\n","import React,{Component} from 'react'\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {getEventbriteEventsSaga} from \"../../actions/eventbrite/eventbriteActions\";\nimport EventCard from \"./EventCard\";\n\nclass EventDetail extends Component {\n    componentWillMount() {\n        const {id} = this.props.match.params\n        this.setState({\n            id\n        })\n        this.props.getEventbriteEventsSaga(id)\n        //throw action to get info from saga\n    }\n\n\n    render(){\n        const {id} = this.state\n        console.log(id)\n        console.log(this.props)\n        return(\n            <div>\n                <span>Here comes the details</span>\n                <button onClick={()=> this.props.history.push('/events')}>\n                    GoBack\n                </button>\n\n                <EventCard events={this.props.eventbriteDataSaga.events}/>\n            </div>\n        )\n    }\n}\n\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        eventbriteDataSaga\n    } = state;\n\n    return {\n        eventbriteDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getEventbriteEventsSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDetail);\n\n\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport Login from \"./components/auth/Login\";\nimport Meetup from \"./components/events/Meetup\";\nimport EventsList from \"./components/events/EventsList\";\nimport EventDetail from \"./components/events/EventDetail\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nconst Routes = () => (\n\n<Switch history={history}>\n\n        <Route exact path='/login' component={Login}/>\n        <Route exact path='/eventsM' component={Meetup}/>\n        <Route exact path='/events' component={EventsList}/>\n        <Route exact path='/' component={Home}/>\n        <Route path='/event/:id' component={EventDetail}/>\n\n    </Switch>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from \"./Routes\";\nimport 'antd/dist/antd.css'\nimport {Layout} from \"antd\";\nconst {\n    Header, Footer, Sider, Content,\n} = Layout;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Layout>\n              <div className='headBanner'>Header</div>\n              <Content>\n                  <Routes/>\n              </Content>\n              <Footer>Mike ©️</Footer>\n          </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_DATA} from \"../actions/exampleActions\";\n\nconst exampleData = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_DATA:\n            const  data  = {\n                type: 'example',\n                id: 1\n            }\n            return { ...state,...data};\n        default:\n            return state;\n    }\n}\n\nexport default exampleData;","import {FETCH_DATA_SAGA} from \"../actions/exampleSagaAction\";\n\nconst exampleDataSaga = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_DATA_SAGA:\n            const  { dataSaga } = action.payload\n            return { ...state,...dataSaga}\n        default:\n            return state\n    }\n}\n\nexport default exampleDataSaga;","import {FETCH_MEETUP_EVENTS_SAGA, FETCH_MEETUP_SAGA} from \"../../actions/meetup/meetupActions\";\n\nconst meetupDataSaga = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_MEETUP_SAGA:\n            const  { meetupData } = action.payload\n            return { ...state,...meetupData}\n        case FETCH_MEETUP_EVENTS_SAGA:\n            const {events} = action.payload\n            return {...state,events}\n        default:\n            return state\n    }\n}\n\nexport default meetupDataSaga;","import { combineReducers } from 'redux';\n//import reducers\nimport exampleData from './exampleReducer'\nimport exampleDataSaga from './exampleReducerSaga'\nimport eventbriteDataSaga from './eventbrite/eventbriteReducer'\nimport meetupDataSaga from './meetup/meetupReducer'\n\nexport default combineReducers({\n    //export here\n    exampleData,\n    exampleDataSaga,\n    eventbriteDataSaga,\n    meetupDataSaga\n})","import axios from 'axios';\nconst host = 'https://api.meetup.com/2/events'\n\n\nexport const getMeetup = ()=>{\n\n    return fetch('https://api.meetup.com/2/events?key=5f27501b5144525025305c4d3e2e4a1f&group_urlname=ny-tech&sign=true')\n        .then(response => {\n            console.log(response)\n            return response.json()\n        })\n        .then(data => {\n            console.log(data);\n        });\n}\n//https://www.eventbriteapi.com/v3/events/search?location.longitude=-99.1332&location.latitude=19.4326&categories=113\nexport const getEventbrite = ()=>{\n    const token = 'OYNITYQ6UQJDJMWBLDNT'\n    //this thing actually works\n    return axios.get('https://www.eventbriteapi.com/v3/categories/',\n        {\n            headers: {\n                Authorization: \"Bearer \" + token,\n            }\n        })\n        .then(r=>r)\n        .catch(e=>console.log(e))\n}\n\nexport const  getEventbriteperCategory = (id) => {\n    console.log('sdk')\n    const token = 'OYNITYQ6UQJDJMWBLDNT'\n    //this thing actually works\n    const query = id.replace('&',' ')\n    return axios.get(`https://www.eventbriteapi.com/v3/events/search/?q=${query}&location.longitude=-99.1332&location.latitude=19.4326&sort_by=date&token=OYNITYQ6UQJDJMWBLDNT&locale=es_ES`)\n        .then(r=>r)\n        .catch(e=>console.log(e))\n}\n\nexport const getMeetupperCategory = (id) => {\n    /*console.log('meetup')\n    const key = '5f27501b5144525025305c4d3e2e4a1f'\n    return axios.get(`https://api.meetup.com/2/open_events.xml?text='Science & Technology'&state=mx&lat=19.43000030517578&lon=-99.13999938964844&key=${key}`)\n        .then(r=>r)\n        .catch(e=>console.log(e))*/\n    return axios.get('https://secure.meetup.com/oauth2/authorize?client_id=vpoumqgm43jcsrvf66q36nqnn7&response_type=code&redirect_uri=https://chatjs-9d06c.firebaseapp.com/events')\n        .then(r=> {\n            console.log(r)\n            return r\n        })\n        .catch( e=>console.log(e))\n}\n\n","import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport {GET_DATA_SAGA,fetchDataSaga} from \"../actions/exampleSagaAction\";\nimport {getEventbriteperCategory, getMeetup, getMeetupperCategory} from '../middleware/events'\nimport {getEventbrite} from '../middleware/events'\nimport {\n    GET_MEETUP_SAGA,\n    fetchMeetupSaga,\n    fetchMeetupEventsSaga,\n    GET_MEETUP_EVENTS_SAGA\n} from '../actions/meetup/meetupActions'\nimport {\n    GET_EVENTBRITE_SAGA,\n    fetchEventbriteSaga,\n    fetchEventbriteEventsSaga, GET_EVENTBRITE_EVENTS_SAGA\n} from \"../actions/eventbrite/eventbriteActions\";\n\nfunction* loginSaga() {\n    try{\n        //const {data} = yield call(signup);\n        const dataSaga = {\n            description : \"Saga info\",\n            id: 1\n        }\n        console.log('saga O:',dataSaga)\n        yield put(fetchDataSaga({dataSaga}));\n\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* signupSaga() {\n    try{\n        //const {data} = yield call(signup);\n        const dataSaga = {\n            description : \"Saga info\",\n            id: 1\n        }\n        console.log('saga O:',dataSaga)\n        yield put(fetchDataSaga({dataSaga}));\n        \n    } catch (e) {\n        console.log(e)\n    }\n}\n\n//----------------------------------------------------\n//--------------Get events Data-----------------------\n//----------------------------------------------------\nfunction* getMeetupData() {\n    try{\n        const data = yield call(getMeetup)\n        console.log('en saga D:',data)\n        yield put(fetchMeetupSaga(data))\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getEventbriteData() {\n    try{\n        const {data} = yield call(getEventbrite)\n        console.log('From data EVentbrite:', data)\n        yield put(fetchEventbriteSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n\n}\n\nfunction* getEventbritePerCategory(id){\n    try{\n        //const  =payload\n        console.log('Saga!!!',id)\n        const {data} = yield call(getEventbriteperCategory,id.payload)\n        console.log('From saga Eventbrite category:',data)\n        yield put(fetchEventbriteEventsSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction * getMeetupPerCategory(id){\n    try{\n        const {data} = yield call(getMeetupperCategory,id.payload)\n        yield put(fetchMeetupEventsSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\n//Wait to load all functions\nfunction* loadSignup(){\n    yield takeEvery(GET_DATA_SAGA,signupSaga);\n}\n\nfunction* loadMeetup() {\n    yield takeEvery(GET_MEETUP_SAGA,getMeetupData)\n}\n\nfunction* loadEventbrite() {\n    yield takeEvery(GET_EVENTBRITE_SAGA,getEventbriteData)\n}\n\nfunction* loadEventbriteEvents() {\n    yield takeEvery(GET_EVENTBRITE_EVENTS_SAGA,getEventbritePerCategory)\n}\n\nfunction* loadMeetupEvents() {\n    yield takeEvery(GET_MEETUP_EVENTS_SAGA,getMeetupPerCategory)\n}\nfunction* rootSaga() {\n    yield all([\n        loadSignup(),\n        loadMeetup(),\n        loadEventbrite(),\n        loadEventbriteEvents(),\n        loadMeetupEvents()\n    ]);\n}\n\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\nimport combineReducers from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nimport customMiddleware from '../middleware';\nimport logger from 'redux-logger'\n\n\nconst initialState   = {};\nconst enhancers = [];\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [\n    sagaMiddleware,\n    logger,\n    ...customMiddleware\n];\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\n\nconst index = createStore(\n    combineReducers,\n    initialState,\n    composedEnhancers\n);\nsagaMiddleware.run(rootSaga);\nexport default index;\n","//if i need middleware i can put it here in order to work, import and then use it on export\n\nexport default [\n //here goes the import\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './store'\n\nconst WithRouter = () => <BrowserRouter><Provider store={store}><App/></Provider></BrowserRouter>\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}