{"version":3,"sources":["actions/eventbrite/eventbriteActions.js","components/events/EventCard.jsx","components/events/EventsList.jsx","actions/auth/authActions.js","components/auth/Login.jsx","components/auth/Profile.jsx","components/Home.jsx","Routes.js","App.js","serviceWorker.js","reducers/exampleReducer.js","actions/exampleActions.js","reducers/exampleReducerSaga.js","actions/exampleSagaAction.js","reducers/eventbrite/eventbriteReducer.js","actions/meetup/meetupActions.js","reducers/meetup/meetupReducer.js","reducers/auth/authReducer.js","reducers/index.js","middleware/events.js","middleware/auth.js","saga/index.js","store/index.js","middleware/index.js","index.js"],"names":["GET_EVENTBRITE_SAGA","GET_EVENTBRITE_EVENTS_SAGA","ADD_EVENTBRITE_EVENT_SAGA","GET_EVENTS_DB","fetchEventbriteSaga","payload","type","getEventbriteSaga","fetchEventbriteEventsSaga","getEventbriteEventsSaga","addEventbriteEventSaga","fetchEventDB","getEventsDBAction","fetchEventsDB","Meta","Card","EventCard","props","react_default","a","createElement","style","background","padding","className","events","loged","userId","addEvent","map","element","date","Date","start","utc","toString","key","id","card","hoverable","width","marginTop","cover","alt","name","src","logo","url","title","text","description","href","target","es_button","block","onClick","renderEvents","EventsList","this","console","log","_this","categories","eventbriteDataSaga","e","authDataSaga","user","_id","auto_complete","dataSource","placeholder","filterOption","inputValue","option","children","toUpperCase","indexOf","onChange","length","row","gutter","events_EventCard","empty","margin","Component","connect","state","dispatch","bindActionCreators","GET_LOGIN_SAGA","getLoginSaga","fetchLoginSaga","Login","email","password","handleChange","value","setState","logIn","_this2","_this$state$user","close","input","marginBottom","prefix","icon","color","ref","node","userNameInput","Password","Profile","userEvents","window","location","reload","list","itemLayout","renderItem","item","Item","avatar","TabPane","Tabs","callback","Home","visible","showModal","handleOk","handleCancel","modal","onOk","onCancel","auth_Login","tabs","defaultActiveKey","tab","events_EventsList","auth_Profile","history","createBrowserHistory","Routes","Switch","Route","exact","path","component","Footer","Layout","Header","Content","Sider","App","layout","src_Routes","Boolean","hostname","match","exampleData","arguments","undefined","Object","objectSpread","exampleDataSaga","action","dataSaga","GET_MEETUP_EVENTS_SAGA","fetchMeetupEventsSaga","meetupDataSaga","meetupData","combineReducers","prod_api","getEventbrite","axios","get","headers","Authorization","then","r","catch","getEventbriteperCategory","query","replace","concat","getMeetupperCategory","createEventDB","event","post","getEventsDBAPI","host","login","withCredentials","response","loginSaga","getEventbriteData","getEventbritePerCategory","getMeetupPerCategory","addEventDB","getEventsDB","loadLogin","loadEventbrite","loadEventbriteEvents","loadMeetupEvents","loadAddEvents","loadGetEvents","rootSaga","_ref","data","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_ref2","_context4","_marked4","_ref3","_context5","_marked5","_ref4","_context6","_marked6","info","_info$payload","_ref5","_context7","_marked7","_ref6","_context8","_marked8","_context9","takeEvery","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","all","_marked15","sagaMiddleware","createSagaMiddleware","middleware","logger","toConsumableArray","composedEnhancers","compose","apply","applyMiddleware","index","createStore","run","ReactDOM","render","BrowserRouter","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0ad4c4f.chunk.js","sourcesContent":["//Action types\nexport const FETCH_EVENTBRITE_SAGA = 'FETCH_EVENTBRITE_SAGA'\nexport const GET_EVENTBRITE_SAGA = 'GET_EVENTBRITE_SAGA'\nexport const FETCH_EVENTBRITE_EVENTS_SAGA = 'FETCH_EVENTBRITE_EVENTS_SAGA'\nexport const GET_EVENTBRITE_EVENTS_SAGA = 'GET_EVENTBRITE_EVENTS_SAGA'\nexport const GET_KEYWORD = 'GET_KEYWORD'\nexport const ADD_EVENTBRITE_EVENT_SAGA = 'ADD_EVENTBRITE_EVENT_SAGA'\nexport const FETCH_EVENT_DB = 'FETCH_EVENT_DB'\nexport const FETCH_EVENTS_DB = 'FETCH_EVENTS_DB'\nexport const GET_EVENTS_DB = 'GET_EVENTS_DB'\n\n//Action Creators\nexport const fetchEventbriteSaga = (payload) => ({\n    type : FETCH_EVENTBRITE_SAGA,\n    payload\n})\n\nexport const getEventbriteSaga = (payload) => ({\n    type : GET_EVENTBRITE_SAGA,\n    payload\n})\n\nexport const fetchEventbriteEventsSaga = (payload) => ({\n    type : FETCH_EVENTBRITE_EVENTS_SAGA,\n    payload\n})\n\nexport const getEventbriteEventsSaga = (payload) => ({\n    type : GET_EVENTBRITE_EVENTS_SAGA,\n    payload\n})\n\nexport const getKeyword = (payload) => ({\n    type : GET_KEYWORD,\n    payload\n})\n\n//Events to my own API\nexport const addEventbriteEventSaga = (payload) => ({\n    type: ADD_EVENTBRITE_EVENT_SAGA,\n    payload\n})\n\nexport const fetchEventDB = (payload) => ({\n    type: FETCH_EVENT_DB,\n    payload\n})\n\nexport const getEventsDBAction = (payload) => ({\n    type: GET_EVENTS_DB,\n    payload\n})\n\nexport const fetchEventsDB = (payload) => ({\n    type: FETCH_EVENTS_DB,\n    payload\n})","import { Card,Button} from 'antd';\nimport React from 'react'\n\nconst { Meta } = Card;\n\nconst EventCard = (props) => {\n\n    const renderEvents = () => {\n        const {events,loged,userId} = props\n        const {addEvent} = props\n        return  events ? events.map((element) => {\n                var date = new Date(element.start.utc)\n                date.toString()\n                 return (<div className='singleCard' key={element.id} >\n                    <Card\n\n                        hoverable\n                        style={{width: 240, marginTop: '1rem'}}\n                        cover={<img alt={element.name}\n                                    src={element.logo ? element.logo.url : 'https://www.valuewalk.com/wp-content/uploads/2017/04/no-thumbnail.png'}/>}\n                    >\n                        <Meta\n                            title={element.name.text}\n                            description={date.toString()}\n                        />\n                        <a href={element.url} target=\"_blank\">\n                            <Button type=\"primary\" block>More information</Button>\n                        </a>\n                        {loged && <Button block onClick={()=>{\n                            addEvent({element,userId})\n                        }}>Add event</Button>}\n                    </Card>\n                </div>)\n            }\n        ) : <h1>No info</h1>\n\n    }\n    return(\n        <div style={{ background: '#ECECEC', padding: '30px' }}>\n            <div className='boxCard'>\n                {renderEvents()}\n            </div>\n        </div>\n    )\n}\n\nexport default EventCard","import React,{Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {\n    addEventbriteEventSaga,\n    getEventbriteEventsSaga,\n    getEventbriteSaga\n} from \"../../actions/eventbrite/eventbriteActions\";\nimport {connect} from \"react-redux\";\nimport {AutoComplete, Button, Empty, Row} from \"antd\";\nimport EventCard from \"./EventCard\";\n\n\nclass EventsList extends Component{\n    componentWillMount() {\n        this.props.getEventbriteSaga()\n    }\n    addEvent(element){\n        console.log('info: evento:',element)\n    }\n\n    render() {\n        //const {categoriesData} = this.props.eventbriteDataSaga ? this.props.eventbriteDataSaga : 'Noinfo'\n        const categories = this.props.eventbriteDataSaga.categories ? this.props.eventbriteDataSaga.categories.map((e) => e.name) : []\n        const loged = !!this.props.authDataSaga.user._id\n        return(\n            <div>\n                <h2>Type a word to show events</h2>\n                <AutoComplete\n                    style={{ width: 200 }}\n                    dataSource={categories}\n                    placeholder=\"type a keyword\"\n                    filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n                    onChange={(e)=> {\n                        this.props.getEventbriteEventsSaga(e)\n                    }}\n                />\n                <div className='cards'>\n                {this.props.eventbriteDataSaga.events.length>0 ? <Row gutter={64}><EventCard addEvent={this.props.addEventbriteEventSaga} userId={this.props.authDataSaga.user._id} loged={loged} events={this.props.eventbriteDataSaga.events}/></Row> : <Empty style={{margin:'1rem'}} description={\n                    <span>\n        not events yet <a href=\"https://www.eventbrite.com/signin/?referrer=%2Fcreate\">Go create one</a>\n      </span>\n                }/>}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        eventbriteDataSaga,\n        authDataSaga\n    } = state;\n\n    return {\n        eventbriteDataSaga,\n        authDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getEventbriteSaga,\n        getEventbriteEventsSaga,\n        addEventbriteEventSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsList);\n\n\n","//Action types\nexport const SEND_AUTH_SAGA = 'FETCH_DATA_SAGA'\nexport const FETCH_AUTH_SAGA = 'GET_DATA_SAGA'\nexport const GET_LOGIN_SAGA = 'GET_LOGIN_SAGA'\nexport const FETCH_LOGIN_SAGA = 'FETCH_LOGIN_SAGA'\nexport const CLEAN_USER = 'CLEAN_USER'\n//Action Creators\nexport const sendAuthSaga = (payload) => ({\n    type : SEND_AUTH_SAGA,\n    payload\n})\n\nexport const fetchAuthSaga = (payload) => ({\n    type : FETCH_AUTH_SAGA,\n    payload\n})\n\nexport const getLoginSaga = (payload) => ({\n    type : GET_LOGIN_SAGA,\n    payload\n})\n\nexport const fetchLoginSaga = (payload) => ({\n    type: FETCH_LOGIN_SAGA,\n    payload\n})\n\nexport const cleanUser = () => ({\n    type: CLEAN_USER,\n\n})","import React,{Component} from 'react'\nimport {Icon, Input, Button} from 'antd';\nimport {bindActionCreators} from \"redux\";\nimport {getLoginSaga} from \"../../actions/auth/authActions\";\nimport {connect} from \"react-redux\";\n\n\nclass Login extends Component{\n    state = {\n        user:{\n            email: '',\n            password: ''\n        }\n    }\n\n    handleChange = (e) => {\n        const {user} = this.state\n        user[e.target.name]=e.target.value\n        this.setState({user})\n    }\n\n    logIn = () =>{\n        console.log('logIn')\n        const {user} = this.state\n        console.log(user)\n        this.props.getLoginSaga(user)\n    }\n\n    render() {\n        const { email,password } = this.state.user;\n        if(this.props.authDataSaga.user._id){\n            console.log('loged')\n            this.props.close()\n        }\n        return(\n            <div>\n                <Input\n                    style={{marginBottom:'1rem'}}\n                    name='email'\n                    placeholder=\"Enter your email\"\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    value={email}\n                    onChange={this.handleChange}\n                    ref={node => this.userNameInput = node}\n                />\n                <Input.Password\n                    style={{marginBottom:'1rem'}}\n                    name='password'\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={this.handleChange}\n                />\n                <Button className='buttonWine' type=\"primary\" onClick={this.logIn}>GO</Button>\n            </div>\n        )\n    }\n\n}\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        authDataSaga\n    } = state;\n\n    return {\n        authDataSaga\n    };\n};\n\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getLoginSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\n\n","import React, { Component } from 'react';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {getEventsDBAction} from \"../../actions/eventbrite/eventbriteActions\";\nimport { List, Avatar, Button } from 'antd';\n\nclass Profile extends Component {\n    componentWillMount() {\n        this.props.getEventsDBAction(this.props.authDataSaga.user._id)\n    }\n\n\n    render() {\n        const {userEvents} = this.props.eventbriteDataSaga\n        return (\n            <div>\n                Welcome:{this.props.authDataSaga.user.name}\n                <Button type=\"primary\" block onClick={()=>{ window.location.reload()}}>Log out</Button>\n                <List\n                    style={{margin: '1rem'}}\n                    itemLayout=\"horizontal\"\n                    dataSource={userEvents}\n                    renderItem={item => (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src=\"https://www.iosicongallery.com/icons/eventbrite-2017-04-06/256.png\" />}\n                                title={<a href={item.url} target=\"_blank\">{item.name}</a>}\n                                description={item.start}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        authDataSaga,\n        eventbriteDataSaga\n    } = state;\n\n    return {\n        authDataSaga,\n        eventbriteDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getEventsDBAction\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React,{Component} from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport EventsList from \"./events/EventsList\";\nimport {getLoginSaga} from \"../actions/auth/authActions\";\nimport { Modal, Button, Tabs } from 'antd';\nimport Login from \"./auth/Login\"\nimport Profile from \"./auth/Profile\";\nconst TabPane = Tabs.TabPane\n\nfunction callback(key) {\n    console.log(key);\n}\n\nclass Home extends Component{\n    state = { visible: false }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n\n    render(){\n        return(\n            <div>\n\n                <Modal\n                    title=\"Login\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Login close={this.handleOk} />\n\n                </Modal>\n\n                <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                    <TabPane tab=\"Events\" key=\"1\">\n                        <EventsList />\n                    </TabPane>\n                    {this.props.authDataSaga.user._id ? <TabPane tab=\"Profile\" key=\"2\">\n                        <Profile/>\n                    </TabPane> : <TabPane tab=\"Login\"  key=\"2\">\n                        <Button onClick={()=> {\n\n                        /*this.props.getLoginSaga({\n                            name:'mike',\n                            email:'mike@correo.com',\n                            password:'1234'\n                        })*/\n                        this.showModal()\n                    }}>Login</Button>\n                    </TabPane>}\n                </Tabs>\n\n            </div>\n        )\n    }\n\n}\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        authDataSaga\n    } = state;\n\n    return {\n        authDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getLoginSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nconst Routes = () => (\n\n<Switch history={history}>\n\n        <Route exact path='/' component={Home}/>\n\n    </Switch>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from \"./Routes\";\nimport 'antd/dist/antd.css'\nimport {Layout} from \"antd\";\nconst {\n    Header, Footer, Sider, Content,\n} = Layout;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Layout>\n              <div className='headBanner'>Header</div>\n              <Content>\n                  <Routes/>\n              </Content>\n              <Footer>Mike ©️</Footer>\n          </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_DATA} from \"../actions/exampleActions\";\n\nconst exampleData = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_DATA:\n            const  data  = {\n                type: 'example',\n                id: 1\n            }\n            return { ...state,...data};\n        default:\n            return state;\n    }\n}\n\nexport default exampleData;","//Action types\nexport const FETCH_DATA = 'FETCH_DATA'\n\n//Action Creators\n/*export const fetchData = (payload) => ({\n    type : FETCH_DATA,\n    payload\n})*/","import {FETCH_DATA_SAGA} from \"../actions/exampleSagaAction\";\n\nconst exampleDataSaga = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_DATA_SAGA:\n            const  { dataSaga } = action.payload\n            return { ...state,...dataSaga}\n        default:\n            return state\n    }\n}\n\nexport default exampleDataSaga;","//Action types\nexport const FETCH_DATA_SAGA = 'FETCH_DATA_SAGA'\nexport const GET_DATA_SAGA = 'GET_DATA_SAGA'\n\n//Action Creators\nexport const fetchDataSaga = (payload) => ({\n    type : FETCH_DATA_SAGA,\n    payload\n})\n\nexport const getDataSaga = (payload) => ({\n    type : GET_DATA_SAGA,\n    payload\n})","import {\n    FETCH_EVENT_DB,\n    FETCH_EVENTBRITE_EVENTS_SAGA,\n    FETCH_EVENTBRITE_SAGA, FETCH_EVENTS_DB, GET_KEYWORD\n} from \"../../actions/eventbrite/eventbriteActions\";\n\nconst eventbriteDataSaga = (state = {\n    events:[],\n    userEvents:[]\n}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_EVENTBRITE_SAGA:\n            const  { categories } = action.payload\n            //console.log('reducer saga',action.payload)\n            return { ...state,categories}\n        case FETCH_EVENTBRITE_EVENTS_SAGA:\n            const {events} = action.payload\n            return {...state,events}\n        case FETCH_EVENT_DB:\n            console.log('se guardo')\n            return {...state}\n        case FETCH_EVENTS_DB:\n            console.log(action.payload)\n            const userEvents = action.payload\n            return {...state,userEvents}\n        case GET_KEYWORD:\n            console.log('Action keyword:',action.payload)\n            const {value} = action.payload\n            return {...state,value}\n        default:\n            return state\n    }\n}\n\nexport default eventbriteDataSaga;","//Action types\nimport {FETCH_EVENTBRITE_EVENTS_SAGA, GET_EVENTBRITE_EVENTS_SAGA} from \"../eventbrite/eventbriteActions\";\n\nexport const FETCH_MEETUP_SAGA = 'FETCH_MEETUP_SAGA'\nexport const GET_MEETUP_SAGA = 'GET_MEETUP_SAGA'\nexport const FETCH_MEETUP_EVENTS_SAGA = 'FETCH_MEETUP_EVENTS_SAGA'\nexport const GET_MEETUP_EVENTS_SAGA = 'GET_MEETUP_EVENTS_SAGA'\n\n//Action Creators\nexport const fetchMeetupSaga = (payload) => ({\n    type : FETCH_MEETUP_SAGA,\n    payload\n})\n\nexport const getMeetupSaga = (payload) => ({\n    type : GET_MEETUP_SAGA,\n    payload\n})\n\nexport const fetchMeetupEventsSaga = (payload) => ({\n    type : FETCH_MEETUP_EVENTS_SAGA,\n    payload\n})\n\nexport const getMeetupEventsSaga = (payload) => ({\n    type : GET_MEETUP_EVENTS_SAGA,\n    payload\n})","import {FETCH_MEETUP_EVENTS_SAGA, FETCH_MEETUP_SAGA} from \"../../actions/meetup/meetupActions\";\n\nconst meetupDataSaga = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_MEETUP_SAGA:\n            const  { meetupData } = action.payload\n            return { ...state,...meetupData}\n        case FETCH_MEETUP_EVENTS_SAGA:\n            const {events} = action.payload\n            return {...state,events}\n        default:\n            return state\n    }\n}\n\nexport default meetupDataSaga;","import { FETCH_LOGIN_SAGA} from \"../../actions/auth/authActions\";\n\nconst authDataSaga = (state = {\n    user:{}\n}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_LOGIN_SAGA:\n            console.log('payload login:',action.payload)\n            const  user = action.payload\n            return { ...state,user}\n        //case CLEAN_USER:\n\n        default:\n            return state\n    }\n}\n\nexport default authDataSaga;","import { combineReducers } from 'redux';\n//import reducers\nimport exampleData from './exampleReducer'\nimport exampleDataSaga from './exampleReducerSaga'\nimport eventbriteDataSaga from './eventbrite/eventbriteReducer'\nimport meetupDataSaga from './meetup/meetupReducer'\nimport authDataSaga from './auth/authReducer'\nexport default combineReducers({\n    //export here\n    exampleData,\n    exampleDataSaga,\n    eventbriteDataSaga,\n    meetupDataSaga,\n    authDataSaga\n})","import axios from 'axios';\n//const host = 'https://api.meetup.com/2/events'\n//const dev_api = 'http://localhost:3000/api/'\nconst prod_api = 'https://floating-plains-96602.herokuapp.com/api/'\n\nexport const getMeetup = ()=>{\n\n    return fetch('https://api.meetup.com/2/events?key=5f27501b5144525025305c4d3e2e4a1f&group_urlname=ny-tech&sign=true')\n        .then(response => {\n            console.log(response)\n            return response.json()\n        })\n        .then(data => {\n            console.log(data);\n        });\n}\n//https://www.eventbriteapi.com/v3/events/search?location.longitude=-99.1332&location.latitude=19.4326&categories=113\nexport const getEventbrite = ()=>{\n    const token = 'OYNITYQ6UQJDJMWBLDNT'\n    //this thing actually works\n    return axios.get('https://www.eventbriteapi.com/v3/categories/',\n        {\n            headers: {\n                Authorization: \"Bearer \" + token,\n            }\n        })\n        .then(r=>r)\n        .catch(e=>console.log(e))\n}\n\nexport const  getEventbriteperCategory = (id) => {\n    console.log('sdk')\n    const token = 'OYNITYQ6UQJDJMWBLDNT'\n    //this thing actually works\n    const query = id.replace('&',' ')\n    return axios.get(`https://www.eventbriteapi.com/v3/events/search/?q=${query}&location.longitude=-99.1332&location.latitude=19.4326&sort_by=date&token=OYNITYQ6UQJDJMWBLDNT&locale=es_ES`)\n        .then(r=>r)\n        .catch(e=>console.log(e))\n}\n\nexport const getMeetupperCategory = (id) => {\n    /*console.log('meetup')\n    const key = '5f27501b5144525025305c4d3e2e4a1f'\n    return axios.get(`https://api.meetup.com/2/open_events.xml?text='Science & Technology'&state=mx&lat=19.43000030517578&lon=-99.13999938964844&key=${key}`)\n        .then(r=>r)\n        .catch(e=>console.log(e))*/\n    return axios.get('https://secure.meetup.com/oauth2/authorize?client_id=vpoumqgm43jcsrvf66q36nqnn7&response_type=code&redirect_uri=https://chatjs-9d06c.firebaseapp.com/events')\n        .then(r=> {\n            console.log(r)\n            return r\n        })\n        .catch( e=>console.log(e))\n}\n\nexport const createEventDB = (event,userId) => {\n    console.log(event)\n    return axios.post(`${prod_api}/event`, {\n        id: event.id,\n        url: event.url,\n        start: event.start.utc,\n        name: event.name.text,\n        description: event.description.text,\n        user: {\n            _id:userId\n        }\n    })\n        .then(r=> {\n            console.log(r)\n            return r\n        })\n        .catch( e=>console.log(e))\n\n}\n\nexport const getEventsDBAPI = (id) =>{\n    return axios.get(`${prod_api}/event/${id}`)\n        .then(r=> {\n            console.log(r)\n            return r\n        })\n        .catch( e=>console.log(e))\n}","import axios from \"axios\";\n\n/**\n * Api auth\n */\n\nconst host = 'https://floating-plains-96602.herokuapp.com/api'\n\nexport const signup = (user)=>{\n    return axios.post(`${host}/signup`,user,{})\n        .then(r=> r.data)\n        .catch(e=> e.response)\n}\n\nexport const login = (user)=>{\n    console.log('middleware data:',user)\n    const {payload} = user\n    console.log('middleware data 2:',payload)\n    return axios.post(`${host}/login`,payload,{withCredentials:true})\n        .then(r=> {\n            console.log('response middleware after api:',r)\n            return r\n        })\n        .catch(e=> e.response)\n}\n\n\nexport const getProfile = () =>{\n    return axios.get(`${host}/profile`,{withCredentials: true})\n        .then(r=> r.data)\n        .catch(e=> e.response)\n}\n\nexport const setUserLocal = (user) =>{\n    localStorage.setItem('user', JSON.stringify(user))\n}","import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport {fetchDataSaga} from \"../actions/exampleSagaAction\";\nimport {\n    createEventDB,\n    getEventbriteperCategory,\n    getEventsDBAPI,\n    getMeetup,\n    getMeetupperCategory\n} from '../middleware/events'\nimport {getEventbrite} from '../middleware/events'\nimport {\n    login\n} from \"../middleware/auth\"\nimport {\n    fetchMeetupSaga,\n    fetchMeetupEventsSaga,\n    GET_MEETUP_EVENTS_SAGA\n} from '../actions/meetup/meetupActions'\nimport {\n    GET_EVENTBRITE_SAGA,\n    fetchEventbriteSaga,\n    fetchEventbriteEventsSaga,\n    GET_EVENTBRITE_EVENTS_SAGA,\n    ADD_EVENTBRITE_EVENT_SAGA,\n    fetchEventDB,\n    GET_EVENTS_DB,\n    fetchEventsDB, getEventsDBAction\n} from \"../actions/eventbrite/eventbriteActions\";\nimport {fetchLoginSaga, GET_LOGIN_SAGA} from \"../actions/auth/authActions\";\n\n\n//----------------------------------------------------\n//--------------Auth Functions -----------------------\n//----------------------------------------------------\nfunction* loginSaga(payload) {\n    try{\n        const {data} = yield call(login,payload)\n        yield put(fetchLoginSaga(data));\n\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* signupSaga() {\n    try{\n        //const {data} = yield call(signup);\n        const dataSaga = {\n            description : \"Saga info\",\n            id: 1\n        }\n        yield put(fetchDataSaga({dataSaga}));\n        \n    } catch (e) {\n        console.log(e)\n    }\n}\n\n//----------------------------------------------------\n//--------------Get events Data-----------------------\n//----------------------------------------------------\nfunction* getMeetupData() {\n    try{\n        const data = yield call(getMeetup)\n        yield put(fetchMeetupSaga(data))\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getEventbriteData() {\n    try{\n        const {data} = yield call(getEventbrite)\n        yield put(fetchEventbriteSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n\n}\n\nfunction* getEventbritePerCategory(id){\n    try{\n        //const  =payload\n        const {data} = yield call(getEventbriteperCategory,id.payload)\n        yield put(fetchEventbriteEventsSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getMeetupPerCategory(id){\n    try{\n        const {data} = yield call(getMeetupperCategory,id.payload)\n        yield put(fetchMeetupEventsSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* addEventDB(info) {\n    try{\n        const {element,userId} = info.payload\n\n        const {data} = yield call(createEventDB,element,userId)\n        yield put(fetchEventDB(data))\n        yield put(getEventsDBAction(userId))\n\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getEventsDB(info) {\n    try{\n        const id = info.payload\n        const {data} = yield call(getEventsDBAPI,id)\n        yield put(fetchEventsDB(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\n//Wait to load all functions\nfunction* loadLogin(){\n    yield takeEvery(GET_LOGIN_SAGA,loginSaga);\n}\n/*\n\nfunction* loadMeetup() {\n    yield takeEvery(GET_LOGIN_SAGA,signupSaga)\n}*/\n\nfunction* loadEventbrite() {\n    yield takeEvery(GET_EVENTBRITE_SAGA,getEventbriteData)\n}\n\nfunction* loadEventbriteEvents() {\n    yield takeEvery(GET_EVENTBRITE_EVENTS_SAGA,getEventbritePerCategory)\n}\n\nfunction* loadMeetupEvents() {\n    yield takeEvery(GET_MEETUP_EVENTS_SAGA,getMeetupPerCategory)\n}\n\nfunction* loadAddEvents() {\n    yield takeEvery(ADD_EVENTBRITE_EVENT_SAGA,addEventDB)\n}\n\nfunction* loadGetEvents() {\n    yield takeEvery(GET_EVENTS_DB,getEventsDB)\n}\n\nfunction* rootSaga() {\n    yield all([\n        loadLogin(),\n        loadEventbrite(),\n        loadEventbriteEvents(),\n        loadMeetupEvents(),\n        loadAddEvents(),\n        loadGetEvents()\n    ]);\n}\n\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\nimport combineReducers from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nimport customMiddleware from '../middleware';\nimport logger from 'redux-logger'\n\n\nconst initialState   = {};\nconst enhancers = [];\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [\n    sagaMiddleware,\n    logger,\n    ...customMiddleware\n];\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\n\nconst index = createStore(\n    combineReducers,\n    initialState,\n    composedEnhancers\n);\nsagaMiddleware.run(rootSaga);\nexport default index;\n","//if i need middleware i can put it here in order to work, import and then use it on export\n\nexport default [\n //here goes the import\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './store'\n\nconst WithRouter = () => <BrowserRouter><Provider store={store}><App/></Provider></BrowserRouter>\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}