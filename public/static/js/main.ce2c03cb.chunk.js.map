{"version":3,"sources":["actions/eventbrite/eventbriteActions.js","reducers/eventbrite/eventbriteReducer.js","actions/meetup/meetupActions.js","components/events/EventCard.jsx","components/events/EventsList.jsx","actions/auth/authActions.js","components/auth/Login.jsx","components/Home.jsx","components/events/Meetup.jsx","components/events/EventDetail.jsx","Routes.js","App.js","serviceWorker.js","reducers/exampleReducer.js","actions/exampleActions.js","reducers/exampleReducerSaga.js","actions/exampleSagaAction.js","reducers/meetup/meetupReducer.js","reducers/auth/authReducer.js","reducers/index.js","middleware/events.js","middleware/auth.js","saga/index.js","store/index.js","middleware/index.js","index.js"],"names":["GET_EVENTBRITE_SAGA","GET_EVENTBRITE_EVENTS_SAGA","ADD_EVENTBRITE_EVENT_SAGA","fetchEventbriteSaga","payload","type","getEventbriteSaga","fetchEventbriteEventsSaga","getEventbriteEventsSaga","addEventbriteEventSaga","fetchEventDB","eventbriteDataSaga","state","arguments","length","undefined","events","action","categories","Object","objectSpread","console","log","value","GET_MEETUP_EVENTS_SAGA","getMeetupSaga","fetchMeetupEventsSaga","Meta","Card","EventCard","props","react_default","a","createElement","style","background","padding","className","userId","loged","addEvent","map","element","date","Date","start","utc","toString","key","id","card","hoverable","width","marginTop","cover","alt","name","src","logo","url","title","text","description","href","target","es_button","block","onClick","renderEvents","EventsList","this","_this","e","authDataSaga","user","_id","auto_complete","dataSource","placeholder","filterOption","inputValue","option","children","toUpperCase","indexOf","onChange","row","gutter","events_EventCard","empty","margin","Component","connect","dispatch","bindActionCreators","GET_LOGIN_SAGA","getLoginSaga","fetchLoginSaga","Login","email","password","handleChange","setState","logIn","_this2","_this$state$user","close","input","marginBottom","prefix","icon","color","ref","node","userNameInput","Password","Home","visible","showModal","handleOk","handleCancel","modal","onOk","onCancel","auth_Login","menu","mode","Item","events_EventsList","Meetup","meetupData","EventDetail","match","params","history","push","createBrowserHistory","Routes","Switch","Route","exact","path","component","Footer","Layout","Header","Content","Sider","App","layout","src_Routes","Boolean","window","location","hostname","exampleData","exampleDataSaga","dataSaga","meetupDataSaga","combineReducers","getEventbrite","axios","get","headers","Authorization","then","r","catch","getEventbriteperCategory","query","replace","concat","getMeetupperCategory","createEventDB","event","post","response","error","host","login","withCredentials","loginSaga","getEventbriteData","getEventbritePerCategory","getMeetupPerCategory","addEventDB","loadLogin","loadEventbrite","loadEventbriteEvents","loadMeetupEvents","loadAddEvents","rootSaga","_ref","data","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_ref2","_context4","_marked4","_ref3","_context5","_marked5","_ref4","_context6","_marked6","info","_info$payload","_ref5","_context7","_marked7","_context8","takeEvery","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","all","_marked13","sagaMiddleware","createSagaMiddleware","middleware","logger","toConsumableArray","composedEnhancers","compose","apply","applyMiddleware","index","createStore","run","ReactDOM","render","BrowserRouter","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce2c03cb.chunk.js","sourcesContent":["//Action types\nexport const FETCH_EVENTBRITE_SAGA = 'FETCH_EVENTBRITE_SAGA'\nexport const GET_EVENTBRITE_SAGA = 'GET_EVENTBRITE_SAGA'\nexport const FETCH_EVENTBRITE_EVENTS_SAGA = 'FETCH_EVENTBRITE_EVENTS_SAGA'\nexport const GET_EVENTBRITE_EVENTS_SAGA = 'GET_EVENTBRITE_EVENTS_SAGA'\nexport const GET_KEYWORD = 'GET_KEYWORD'\nexport const ADD_EVENTBRITE_EVENT_SAGA = 'ADD_EVENTBRITE_EVENT_SAGA'\nexport const FETCH_EVENT_DB = 'FETCH_EVENT_DB'\n\n//Action Creators\nexport const fetchEventbriteSaga = (payload) => ({\n    type : FETCH_EVENTBRITE_SAGA,\n    payload\n})\n\nexport const getEventbriteSaga = (payload) => ({\n    type : GET_EVENTBRITE_SAGA,\n    payload\n})\n\nexport const fetchEventbriteEventsSaga = (payload) => ({\n    type : FETCH_EVENTBRITE_EVENTS_SAGA,\n    payload\n})\n\nexport const getEventbriteEventsSaga = (payload) => ({\n    type : GET_EVENTBRITE_EVENTS_SAGA,\n    payload\n})\n\nexport const getKeyword = (payload) => ({\n    type : GET_KEYWORD,\n    payload\n})\n\nexport const addEventbriteEventSaga = (payload) => ({\n    type: ADD_EVENTBRITE_EVENT_SAGA,\n    payload\n})\n\nexport const fetchEventDB = (payload) => ({\n    type: FETCH_EVENT_DB,\n    payload\n})","import {\n    FETCH_EVENTBRITE_EVENTS_SAGA,\n    FETCH_EVENTBRITE_SAGA, GET_KEYWORD\n} from \"../../actions/eventbrite/eventbriteActions\";\n\nconst eventbriteDataSaga = (state = {\n    events:[],\n}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_EVENTBRITE_SAGA:\n            const  { categories } = action.payload\n            //console.log('reducer saga',action.payload)\n            return { ...state,categories}\n        case FETCH_EVENTBRITE_EVENTS_SAGA:\n            const {events} = action.payload\n            return {...state,events}\n        case GET_KEYWORD:\n            console.log('Action keyword:',action.payload)\n            const {value} = action.payload\n            return {...state,value}\n        default:\n            return state\n    }\n}\n\nexport default eventbriteDataSaga;","//Action types\nimport {FETCH_EVENTBRITE_EVENTS_SAGA, GET_EVENTBRITE_EVENTS_SAGA} from \"../eventbrite/eventbriteActions\";\n\nexport const FETCH_MEETUP_SAGA = 'FETCH_MEETUP_SAGA'\nexport const GET_MEETUP_SAGA = 'GET_MEETUP_SAGA'\nexport const FETCH_MEETUP_EVENTS_SAGA = 'FETCH_MEETUP_EVENTS_SAGA'\nexport const GET_MEETUP_EVENTS_SAGA = 'GET_MEETUP_EVENTS_SAGA'\n\n//Action Creators\nexport const fetchMeetupSaga = (payload) => ({\n    type : FETCH_MEETUP_SAGA,\n    payload\n})\n\nexport const getMeetupSaga = (payload) => ({\n    type : GET_MEETUP_SAGA,\n    payload\n})\n\nexport const fetchMeetupEventsSaga = (payload) => ({\n    type : FETCH_MEETUP_EVENTS_SAGA,\n    payload\n})\n\nexport const getMeetupEventsSaga = (payload) => ({\n    type : GET_MEETUP_EVENTS_SAGA,\n    payload\n})","import { Card, Col, Row, Button} from 'antd';\nimport React from 'react'\n\nconst { Meta } = Card;\n\nconst EventCard = (props) => {\n\n    const renderEvents = () => {\n        const {events,loged,userId} = props\n        const {addEvent} = props\n        //console.log(addEvent)\n        return  events ? events.map((element) => {\n                var date = new Date(element.start.utc)\n                date.toString()\n                console.log('en el on map:',addEvent)\n                 return <div className='singleCard' key={element.id} >\n                    <Card\n\n                        hoverable\n                        style={{width: 240, marginTop: '1rem'}}\n                        cover={<img alt={element.name}\n                                    src={element.logo ? element.logo.url : 'https://www.valuewalk.com/wp-content/uploads/2017/04/no-thumbnail.png'}/>}\n                    >\n                        <Meta\n                            title={element.name.text}\n                            description={date.toString()}\n                        />\n                        <a href={element.url} target=\"_blank\">\n                            <Button type=\"primary\" block>More information</Button>\n                        </a>\n                        <Button block onClick={()=>{\n                            addEvent({element,userId})\n                        }}>Add event</Button>\n                    </Card>\n                </div>\n            }\n        ) : <h1>No info</h1>\n\n    }\n    return(\n        <div style={{ background: '#ECECEC', padding: '30px' }}>\n            <div className='boxCard'>\n                {renderEvents()}\n            </div>\n        </div>\n    )\n}\n\nexport default EventCard","import React,{Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {\n    addEventbriteEventSaga,\n    getEventbriteEventsSaga,\n    getEventbriteSaga\n} from \"../../actions/eventbrite/eventbriteActions\";\nimport {connect} from \"react-redux\";\nimport CategoryList from './CategoryList'\nimport eventbriteDataSaga from \"../../reducers/eventbrite/eventbriteReducer\";\nimport {getMeetupEventsSaga, getMeetupSaga} from \"../../actions/meetup/meetupActions\";\nimport {AutoComplete, Button, Empty, Row} from \"antd\";\nimport EventCard from \"./EventCard\";\n\n\nclass EventsList extends Component{\n    componentWillMount() {\n        this.props.getEventbriteSaga()\n    }\n    addEvent(element){\n        console.log('info: evento:',element)\n    }\n\n    render() {\n        console.log(this.props)\n        //const {categoriesData} = this.props.eventbriteDataSaga ? this.props.eventbriteDataSaga : 'Noinfo'\n        const categories = this.props.eventbriteDataSaga.categories ? this.props.eventbriteDataSaga.categories.map((e) => e.name) : []\n        const loged = !!this.props.authDataSaga.user._id\n        console.log('Estas logeao? :3?',loged)\n        return(\n            <div>\n                <AutoComplete\n                    style={{ width: 200 }}\n                    dataSource={categories}\n                    placeholder=\"type a keyword\"\n                    filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n                    onChange={(e)=> {\n                        this.props.getEventbriteEventsSaga(e)\n                    }}\n                />\n                <div className='cards'>\n                {this.props.eventbriteDataSaga.events.length>0 ? <Row gutter={64}><EventCard addEvent={this.props.addEventbriteEventSaga} userId={this.props.authDataSaga.user._id} loged={loged} events={this.props.eventbriteDataSaga.events}/></Row> : <Empty style={{margin:'1rem'}} description={\n                    <span>\n        not events yet <a href=\"https://www.eventbrite.com/signin/?referrer=%2Fcreate\">Go create one</a>\n      </span>\n                }/>}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        eventbriteDataSaga,\n        authDataSaga\n    } = state;\n\n    return {\n        eventbriteDataSaga,\n        authDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getEventbriteSaga,\n        getEventbriteEventsSaga,\n        addEventbriteEventSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsList);\n\n\n","//Action types\nexport const SEND_AUTH_SAGA = 'FETCH_DATA_SAGA'\nexport const FETCH_AUTH_SAGA = 'GET_DATA_SAGA'\nexport const GET_LOGIN_SAGA = 'GET_LOGIN_SAGA'\nexport const FETCH_LOGIN_SAGA = 'FETCH_LOGIN_SAGA'\nexport const CLEAN_USER = 'CLEAN_USER'\n//Action Creators\nexport const sendAuthSaga = (payload) => ({\n    type : SEND_AUTH_SAGA,\n    payload\n})\n\nexport const fetchAuthSaga = (payload) => ({\n    type : FETCH_AUTH_SAGA,\n    payload\n})\n\nexport const getLoginSaga = (payload) => ({\n    type : GET_LOGIN_SAGA,\n    payload\n})\n\nexport const fetchLoginSaga = (payload) => ({\n    type: FETCH_LOGIN_SAGA,\n    payload\n})\n\nexport const cleanUser = () => ({\n    type: CLEAN_USER,\n\n})","import React,{Component} from 'react'\nimport {\n    Form, Icon, Input, Button,\n} from 'antd';\nimport {bindActionCreators} from \"redux\";\nimport {getLoginSaga} from \"../../actions/auth/authActions\";\nimport {connect} from \"react-redux\";\n\n\nclass Login extends Component{\n    state = {\n        user:{\n            email: '',\n            password: ''\n        }\n    }\n\n    handleChange = (e) => {\n        const {user} = this.state\n        user[e.target.name]=e.target.value\n        this.setState({user})\n    }\n\n    logIn = () =>{\n        console.log('logIn')\n        const {user} = this.state\n        console.log(user)\n        this.props.getLoginSaga(user)\n    }\n\n    render() {\n        const { email,password } = this.state.user;\n        if(this.props.authDataSaga.user._id){\n            console.log('loged')\n            this.props.close()\n        }\n        return(\n            <div>\n                <Input\n                    style={{marginBottom:'1rem'}}\n                    name='email'\n                    placeholder=\"Enter your email\"\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    value={email}\n                    onChange={this.handleChange}\n                    ref={node => this.userNameInput = node}\n                />\n                <Input.Password\n                    style={{marginBottom:'1rem'}}\n                    name='password'\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={this.handleChange}\n                />\n                <Button className='buttonWine' type=\"primary\" onClick={this.logIn}>GO</Button>\n            </div>\n        )\n    }\n\n}\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        authDataSaga\n    } = state;\n\n    return {\n        authDataSaga\n    };\n};\n\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getLoginSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\n\n","import React,{Component} from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport EventsList from \"./events/EventsList\";\nimport {getLoginSaga} from \"../actions/auth/authActions\";\nimport { Menu, Icon, Modal, Button } from 'antd';\nimport Login from \"./auth/Login\"\nimport { Alert } from 'antd';\n\nclass Home extends Component{\n    state = { visible: false }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n\n    render(){\n        return(\n            <div>\n\n                <Modal\n                    title=\"Login\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Login close={this.handleOk} />\n\n                </Modal>\n                <Menu\n                    mode=\"horizontal\"\n                >\n\n                <Menu.Item key=\"alipay\">\n                    <Button onClick={()=> {\n\n                        /*this.props.getLoginSaga({\n                            name:'mike',\n                            email:'mike@correo.com',\n                            password:'1234'\n                        })*/\n                        this.showModal()\n                        console.log('Login')\n                    }}>Login</Button>                </Menu.Item>\n            </Menu>\n\n                <EventsList />\n            </div>\n        )\n    }\n\n}\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        authDataSaga\n    } = state;\n\n    return {\n        authDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getLoginSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React,{Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {getMeetupSaga} from \"../../actions/meetup/meetupActions\";\nimport {connect} from \"react-redux\";\nimport axios from 'axios'\n\nclass Meetup extends Component{\n    componentWillMount() {\n        //this.props.getMeetupSaga()\n        const token = 'OYNITYQ6UQJDJMWBLDNT'\n        //this thing actually works\n        /*axios.get('https://www.eventbriteapi.com/v3/categories/',\n            {\n                headers: {\n                    Authorization: \"Bearer \" + token,\n\n                }\n            })\n            .then(response=>console.log('respuesta',response))\n            .catch(e=>console.log(e))*/\n\n    }\n\n    render() {\n        console.log(this.props)\n        return(\n            <div>\n                <h1>MeetUp data</h1>\n\n            </div>\n        )\n    }\n\n}\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        meetupData\n    } = state;\n\n    return {\n        meetupData\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getMeetupSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meetup);\n","import React,{Component} from 'react'\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {getEventbriteEventsSaga} from \"../../actions/eventbrite/eventbriteActions\";\nimport EventCard from \"./EventCard\";\n\nclass EventDetail extends Component {\n    componentWillMount() {\n        const {id} = this.props.match.params\n        this.setState({\n            id\n        })\n        this.props.getEventbriteEventsSaga(id)\n        //throw action to get info from saga\n    }\n\n\n    render(){\n        const {id} = this.state\n        console.log(id)\n        console.log(this.props)\n        return(\n            <div>\n                <span>Here comes the details</span>\n                <button onClick={()=> this.props.history.push('/events')}>\n                    GoBack\n                </button>\n\n                <EventCard events={this.props.eventbriteDataSaga.events}/>\n            </div>\n        )\n    }\n}\n\n\n\n//Set the main stage to props i need to use on this component\nconst mapStateToProps = (state) => {\n    const {\n        eventbriteDataSaga\n    } = state;\n\n    return {\n        eventbriteDataSaga\n    };\n};\n\n//Set the acction is going to be trigerred on this component\nconst mapDispatchToProps = (dispatch) => {\n\n    return bindActionCreators({\n        getEventbriteEventsSaga\n    }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDetail);\n\n\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport Login from \"./components/auth/Login\";\nimport Meetup from \"./components/events/Meetup\";\nimport EventsList from \"./components/events/EventsList\";\nimport EventDetail from \"./components/events/EventDetail\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nconst Routes = () => (\n\n<Switch history={history}>\n\n        <Route exact path='/login' component={Login}/>\n        <Route exact path='/eventsM' component={Meetup}/>\n        <Route exact path='/events' component={EventsList}/>\n        <Route exact path='/' component={Home}/>\n        <Route path='/event/:id' component={EventDetail}/>\n\n    </Switch>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from \"./Routes\";\nimport 'antd/dist/antd.css'\nimport {Layout} from \"antd\";\nconst {\n    Header, Footer, Sider, Content,\n} = Layout;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Layout>\n              <div className='headBanner'>Header</div>\n              <Content>\n                  <Routes/>\n              </Content>\n              <Footer>Mike ©️</Footer>\n          </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_DATA} from \"../actions/exampleActions\";\n\nconst exampleData = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_DATA:\n            const  data  = {\n                type: 'example',\n                id: 1\n            }\n            return { ...state,...data};\n        default:\n            return state;\n    }\n}\n\nexport default exampleData;","//Action types\nexport const FETCH_DATA = 'FETCH_DATA'\n\n//Action Creators\nexport const fetchData = (payload) => ({\n    type : FETCH_DATA,\n    payload\n})","import {FETCH_DATA_SAGA} from \"../actions/exampleSagaAction\";\n\nconst exampleDataSaga = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_DATA_SAGA:\n            const  { dataSaga } = action.payload\n            return { ...state,...dataSaga}\n        default:\n            return state\n    }\n}\n\nexport default exampleDataSaga;","//Action types\nexport const FETCH_DATA_SAGA = 'FETCH_DATA_SAGA'\nexport const GET_DATA_SAGA = 'GET_DATA_SAGA'\n\n//Action Creators\nexport const fetchDataSaga = (payload) => ({\n    type : FETCH_DATA_SAGA,\n    payload\n})\n\nexport const getDataSaga = (payload) => ({\n    type : GET_DATA_SAGA,\n    payload\n})","import {FETCH_MEETUP_EVENTS_SAGA, FETCH_MEETUP_SAGA} from \"../../actions/meetup/meetupActions\";\n\nconst meetupDataSaga = (state = {}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_MEETUP_SAGA:\n            const  { meetupData } = action.payload\n            return { ...state,...meetupData}\n        case FETCH_MEETUP_EVENTS_SAGA:\n            const {events} = action.payload\n            return {...state,events}\n        default:\n            return state\n    }\n}\n\nexport default meetupDataSaga;","import {CLEAN_USER, FETCH_LOGIN_SAGA} from \"../../actions/auth/authActions\";\n\nconst authDataSaga = (state = {\n    user:{}\n}, action) => {\n    switch (action.type) {\n        //set the data from saga to the state\n        case FETCH_LOGIN_SAGA:\n            console.log('payload login:',action.payload)\n            const  user = action.payload\n            return { ...state,user}\n        //case CLEAN_USER:\n\n        default:\n            return state\n    }\n}\n\nexport default authDataSaga;","import { combineReducers } from 'redux';\n//import reducers\nimport exampleData from './exampleReducer'\nimport exampleDataSaga from './exampleReducerSaga'\nimport eventbriteDataSaga from './eventbrite/eventbriteReducer'\nimport meetupDataSaga from './meetup/meetupReducer'\nimport authDataSaga from './auth/authReducer'\nexport default combineReducers({\n    //export here\n    exampleData,\n    exampleDataSaga,\n    eventbriteDataSaga,\n    meetupDataSaga,\n    authDataSaga\n})","import axios from 'axios';\nconst host = 'https://api.meetup.com/2/events'\nconst dev_api = 'http://localhost:3000/api/'\nconst prod_api = 'https://floating-plains-96602.herokuapp.com/api/'\n\nexport const getMeetup = ()=>{\n\n    return fetch('https://api.meetup.com/2/events?key=5f27501b5144525025305c4d3e2e4a1f&group_urlname=ny-tech&sign=true')\n        .then(response => {\n            console.log(response)\n            return response.json()\n        })\n        .then(data => {\n            console.log(data);\n        });\n}\n//https://www.eventbriteapi.com/v3/events/search?location.longitude=-99.1332&location.latitude=19.4326&categories=113\nexport const getEventbrite = ()=>{\n    const token = 'OYNITYQ6UQJDJMWBLDNT'\n    //this thing actually works\n    return axios.get('https://www.eventbriteapi.com/v3/categories/',\n        {\n            headers: {\n                Authorization: \"Bearer \" + token,\n            }\n        })\n        .then(r=>r)\n        .catch(e=>console.log(e))\n}\n\nexport const  getEventbriteperCategory = (id) => {\n    console.log('sdk')\n    const token = 'OYNITYQ6UQJDJMWBLDNT'\n    //this thing actually works\n    const query = id.replace('&',' ')\n    return axios.get(`https://www.eventbriteapi.com/v3/events/search/?q=${query}&location.longitude=-99.1332&location.latitude=19.4326&sort_by=date&token=OYNITYQ6UQJDJMWBLDNT&locale=es_ES`)\n        .then(r=>r)\n        .catch(e=>console.log(e))\n}\n\nexport const getMeetupperCategory = (id) => {\n    /*console.log('meetup')\n    const key = '5f27501b5144525025305c4d3e2e4a1f'\n    return axios.get(`https://api.meetup.com/2/open_events.xml?text='Science & Technology'&state=mx&lat=19.43000030517578&lon=-99.13999938964844&key=${key}`)\n        .then(r=>r)\n        .catch(e=>console.log(e))*/\n    return axios.get('https://secure.meetup.com/oauth2/authorize?client_id=vpoumqgm43jcsrvf66q36nqnn7&response_type=code&redirect_uri=https://chatjs-9d06c.firebaseapp.com/events')\n        .then(r=> {\n            console.log(r)\n            return r\n        })\n        .catch( e=>console.log(e))\n}\n\nexport const createEventDB = (event,userId) => {\n    console.log(event)\n    return axios.post(`${dev_api}/event`, {\n        id: event.id,\n        url: event.url,\n        start: event.start.utc,\n        name: event.name.text,\n        description: event.description.text,\n        user: {\n            _id:userId\n        }\n    })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n","import axios from \"axios\";\n\n/**\n * Api auth\n */\n\nconst host = 'https://floating-plains-96602.herokuapp.com/api'\n\nexport const signup = (user)=>{\n    return axios.post(`${host}/signup`,user,{})\n        .then(r=> r.data)\n        .catch(e=> e.response)\n}\n\nexport const login = (user)=>{\n    console.log('middleware data:',user)\n    const {payload} = user\n    console.log('middleware data 2:',payload)\n    return axios.post(`${host}/login`,payload,{withCredentials:true})\n        .then(r=> {\n            console.log('response middleware after api:',r)\n            return r\n        })\n        .catch(e=> e.response)\n}\n\n\nexport const getProfile = () =>{\n    return axios.get(`${host}/profile`,{withCredentials: true})\n        .then(r=> r.data)\n        .catch(e=> e.response)\n}\n\nexport const setUserLocal = (user) =>{\n    localStorage.setItem('user', JSON.stringify(user))\n}","import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport {GET_DATA_SAGA,fetchDataSaga} from \"../actions/exampleSagaAction\";\nimport {createEventDB, getEventbriteperCategory, getMeetup, getMeetupperCategory} from '../middleware/events'\nimport {getEventbrite} from '../middleware/events'\nimport {\n    login\n} from \"../middleware/auth\"\nimport {\n    GET_MEETUP_SAGA,\n    fetchMeetupSaga,\n    fetchMeetupEventsSaga,\n    GET_MEETUP_EVENTS_SAGA\n} from '../actions/meetup/meetupActions'\nimport {\n    GET_EVENTBRITE_SAGA,\n    fetchEventbriteSaga,\n    fetchEventbriteEventsSaga, GET_EVENTBRITE_EVENTS_SAGA, ADD_EVENTBRITE_EVENT_SAGA, fetchEventDB\n} from \"../actions/eventbrite/eventbriteActions\";\nimport {fetchLoginSaga, GET_LOGIN_SAGA} from \"../actions/auth/authActions\";\n\n\n//----------------------------------------------------\n//--------------Auth Functions -----------------------\n//----------------------------------------------------\nfunction* loginSaga(payload) {\n    try{\n        const {data} = yield call(login,payload)\n        yield put(fetchLoginSaga(data));\n\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* signupSaga() {\n    try{\n        //const {data} = yield call(signup);\n        const dataSaga = {\n            description : \"Saga info\",\n            id: 1\n        }\n        yield put(fetchDataSaga({dataSaga}));\n        \n    } catch (e) {\n        console.log(e)\n    }\n}\n\n//----------------------------------------------------\n//--------------Get events Data-----------------------\n//----------------------------------------------------\nfunction* getMeetupData() {\n    try{\n        const data = yield call(getMeetup)\n        console.log('en saga D:',data)\n        yield put(fetchMeetupSaga(data))\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getEventbriteData() {\n    try{\n        const {data} = yield call(getEventbrite)\n        console.log('From data EVentbrite:', data)\n        yield put(fetchEventbriteSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n\n}\n\nfunction* getEventbritePerCategory(id){\n    try{\n        //const  =payload\n        const {data} = yield call(getEventbriteperCategory,id.payload)\n        console.log('From saga Eventbrite category:',data)\n        yield put(fetchEventbriteEventsSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getMeetupPerCategory(id){\n    try{\n        const {data} = yield call(getMeetupperCategory,id.payload)\n        yield put(fetchMeetupEventsSaga(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* addEventDB(info) {\n    try{\n        const {element,userId} = info.payload\n\n        const {data} = yield call(createEventDB,element,userId)\n        yield put(fetchEventDB(data))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\n//Wait to load all functions\nfunction* loadLogin(){\n    yield takeEvery(GET_LOGIN_SAGA,loginSaga);\n}\n/*\n\nfunction* loadMeetup() {\n    yield takeEvery(GET_LOGIN_SAGA,signupSaga)\n}*/\n\nfunction* loadEventbrite() {\n    yield takeEvery(GET_EVENTBRITE_SAGA,getEventbriteData)\n}\n\nfunction* loadEventbriteEvents() {\n    yield takeEvery(GET_EVENTBRITE_EVENTS_SAGA,getEventbritePerCategory)\n}\n\nfunction* loadMeetupEvents() {\n    yield takeEvery(GET_MEETUP_EVENTS_SAGA,getMeetupPerCategory)\n}\n\nfunction* loadAddEvents() {\n    yield takeEvery(ADD_EVENTBRITE_EVENT_SAGA,addEventDB)\n}\n\nfunction* rootSaga() {\n    yield all([\n        loadLogin(),\n        loadEventbrite(),\n        loadEventbriteEvents(),\n        loadMeetupEvents(),\n        loadAddEvents()\n    ]);\n}\n\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\nimport combineReducers from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nimport customMiddleware from '../middleware';\nimport logger from 'redux-logger'\n\n\nconst initialState   = {};\nconst enhancers = [];\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [\n    sagaMiddleware,\n    logger,\n    ...customMiddleware\n];\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\n\nconst index = createStore(\n    combineReducers,\n    initialState,\n    composedEnhancers\n);\nsagaMiddleware.run(rootSaga);\nexport default index;\n","//if i need middleware i can put it here in order to work, import and then use it on export\n\nexport default [\n //here goes the import\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './store'\n\nconst WithRouter = () => <BrowserRouter><Provider store={store}><App/></Provider></BrowserRouter>\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}